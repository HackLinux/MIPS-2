$date
	Sun Dec  7 13:36:40 2014
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module processor_tb $end
$scope module MIPS $end
$var wire 1 ! _reset $end
$var wire 6 " afunc [5:0] $end
$var wire 32 # alu_in0 [31:0] $end
$var wire 1 $ alu_op $end
$var wire 32 % alu_out [31:0] $end
$var wire 2 & bfunc [1:0] $end
$var wire 1 ' bu_out $end
$var wire 1 ( clk $end
$var wire 1 ) d_in $end
$var wire 30 * daddr [31:2] $end
$var wire 32 + dc_din [31:0] $end
$var wire 32 , dc_out [31:0] $end
$var wire 3 - dfunc [2:0] $end
$var wire 32 . din [31:0] $end
$var wire 32 / dout [31:0] $end
$var wire 30 0 iaddr [31:2] $end
$var wire 32 1 idata [31:0] $end
$var wire 32 2 r0 [31:0] $end
$var wire 32 3 r1 [31:0] $end
$var wire 32 4 r2 [31:0] $end
$var wire 1 5 reg_in $end
$var wire 5 6 rsel0 [4:0] $end
$var wire 5 7 rsel1 [4:0] $end
$var wire 5 8 rsel2 [4:0] $end
$var wire 1 9 rw $end
$scope module c $end
$var wire 1 : _and $end
$var wire 1 ; _nor $end
$var wire 1 < _or $end
$var wire 1 ! _reset $end
$var wire 1 = _xor $end
$var wire 1 > add $end
$var wire 1 ? addi $end
$var wire 1 @ addiu $end
$var wire 1 A adds $end
$var wire 1 B addu $end
$var wire 1 C addus $end
$var wire 1 D andi $end
$var wire 1 E beq $end
$var wire 1 F bgtz $end
$var wire 1 G blez $end
$var wire 1 H bne $end
$var wire 1 I break $end
$var wire 1 J cache $end
$var wire 1 ( clk $end
$var wire 1 K cop0 $end
$var wire 1 L cop1 $end
$var wire 1 M cop1x $end
$var wire 32 N din [31:0] $end
$var wire 1 O div $end
$var wire 1 P divu $end
$var wire 6 Q funct [5:0] $end
$var wire 16 R imme [15:0] $end
$var wire 32 S inst [31:0] $end
$var wire 1 T j $end
$var wire 1 U jal $end
$var wire 1 V jalr $end
$var wire 1 W jr $end
$var wire 1 X lb $end
$var wire 1 Y lbu $end
$var wire 1 Z ldc1 $end
$var wire 1 [ lh $end
$var wire 1 \ lhu $end
$var wire 1 ] ll $end
$var wire 1 ^ lui $end
$var wire 1 _ lw $end
$var wire 1 ` lwc1 $end
$var wire 1 a lwl $end
$var wire 1 b lwr $end
$var wire 1 c mfhi $end
$var wire 1 d mflo $end
$var wire 1 e movci $end
$var wire 1 f movn $end
$var wire 1 g movz $end
$var wire 1 h mthi $end
$var wire 1 i mtlo $end
$var wire 1 j mult $end
$var wire 1 k multu $end
$var wire 26 l offset [25:0] $end
$var wire 6 m opcode [5:0] $end
$var wire 1 n ori $end
$var wire 1 o perf $end
$var wire 1 p r1 $end
$var wire 1 q r10 $end
$var wire 1 r r11 $end
$var wire 1 s r12 $end
$var wire 1 t r13 $end
$var wire 1 u r14 $end
$var wire 1 v r15 $end
$var wire 1 w r16 $end
$var wire 1 x r17 $end
$var wire 1 y r18 $end
$var wire 1 z r19 $end
$var wire 1 { r2 $end
$var wire 1 | r20 $end
$var wire 1 } r21 $end
$var wire 1 ~ r22 $end
$var wire 1 !" r23 $end
$var wire 1 "" r24 $end
$var wire 1 #" r25 $end
$var wire 1 $" r26 $end
$var wire 1 %" r27 $end
$var wire 1 &" r28 $end
$var wire 1 '" r29 $end
$var wire 1 (" r3 $end
$var wire 1 )" r30 $end
$var wire 1 *" r31 $end
$var wire 1 +" r32 $end
$var wire 1 ," r33 $end
$var wire 1 -" r34 $end
$var wire 1 ." r35 $end
$var wire 1 /" r36 $end
$var wire 1 0" r37 $end
$var wire 1 1" r38 $end
$var wire 1 2" r39 $end
$var wire 1 3" r4 $end
$var wire 1 4" r40 $end
$var wire 1 5" r41 $end
$var wire 1 6" r42 $end
$var wire 1 7" r43 $end
$var wire 1 8" r44 $end
$var wire 1 9" r45 $end
$var wire 1 :" r46 $end
$var wire 1 ;" r47 $end
$var wire 1 <" r48 $end
$var wire 1 =" r49 $end
$var wire 1 >" r5 $end
$var wire 1 ?" r50 $end
$var wire 1 @" r6 $end
$var wire 1 A" r7 $end
$var wire 1 B" r8 $end
$var wire 1 C" r9 $end
$var wire 5 D" rd [4:0] $end
$var wire 1 E" regimm $end
$var wire 5 F" rs [4:0] $end
$var wire 5 G" rt [4:0] $end
$var wire 1 H" sb $end
$var wire 1 I" sc $end
$var wire 1 J" sdc1 $end
$var wire 1 K" sh $end
$var wire 5 L" shamt [4:0] $end
$var wire 1 M" sll $end
$var wire 1 N" sllv $end
$var wire 1 O" slt $end
$var wire 1 P" slti $end
$var wire 1 Q" sltiu $end
$var wire 1 R" sltu $end
$var wire 1 S" special $end
$var wire 1 T" special2 $end
$var wire 1 U" sra $end
$var wire 1 V" srav $end
$var wire 1 W" srl $end
$var wire 1 X" srlv $end
$var wire 1 Y" sub $end
$var wire 1 Z" subs $end
$var wire 1 [" subu $end
$var wire 1 \" subus $end
$var wire 1 ]" sw $end
$var wire 1 ^" swc1 $end
$var wire 1 _" swl $end
$var wire 1 `" swr $end
$var wire 1 a" sync $end
$var wire 1 b" syscall $end
$var wire 1 c" teq $end
$var wire 1 d" tne $end
$var wire 1 e" xori $end
$var reg 1 f" alu_op $end
$var reg 2 g" bfunc [1:0] $end
$var reg 1 h" d_in $end
$var reg 3 i" dfunc [2:0] $end
$var reg 32 j" dout [31:0] $end
$var reg 6 k" func [5:0] $end
$var reg 30 l" iaddr [31:2] $end
$var reg 2 m" j_mode [1:0] $end
$var reg 1 n" reg_in $end
$var reg 5 o" rsel0 [4:0] $end
$var reg 5 p" rsel1 [4:0] $end
$var reg 5 q" rsel2 [4:0] $end
$var reg 1 r" rw $end
$upscope $end
$scope module b $end
$var wire 2 s" func [1:0] $end
$var wire 32 t" in0 [31:0] $end
$var wire 32 u" in1 [31:0] $end
$var reg 1 v" out $end
$upscope $end
$scope module dc $end
$var wire 32 w" _addr [31:0] $end
$var wire 32 x" _in [31:0] $end
$var wire 30 y" addr [31:2] $end
$var wire 32 z" base [31:0] $end
$var wire 8 {" byte [7:0] $end
$var wire 32 |" din [31:0] $end
$var wire 3 }" func [2:0] $end
$var wire 16 ~" halfword [15:0] $end
$var wire 32 !# in [31:0] $end
$var wire 16 "# offset [15:0] $end
$var wire 32 ## rin [31:0] $end
$var wire 1 9 rw $end
$var reg 32 $# out [31:0] $end
$upscope $end
$scope module i $end
$var wire 30 %# addr [31:2] $end
$var wire 32 &# data [31:0] $end
$upscope $end
$scope module d $end
$var wire 30 '# addr [31:2] $end
$var wire 1 ( clk $end
$var wire 32 (# in [31:0] $end
$var wire 32 )# out [31:0] $end
$var wire 1 9 rw $end
$upscope $end
$scope module m_din $end
$var wire 32 *# in0 [31:0] $end
$var wire 32 +# in1 [31:0] $end
$var wire 32 ,# out [31:0] $end
$var wire 1 ) sel $end
$upscope $end
$scope module m_alu $end
$var wire 32 -# in0 [31:0] $end
$var wire 32 .# in1 [31:0] $end
$var wire 32 /# out [31:0] $end
$var wire 1 $ sel $end
$upscope $end
$scope module m_reg $end
$var wire 32 0# in0 [31:0] $end
$var wire 32 1# in1 [31:0] $end
$var wire 32 2# out [31:0] $end
$var wire 1 5 sel $end
$upscope $end
$scope module reg0 $end
$var wire 1 ! _reset $end
$var wire 1 ( clk $end
$var wire 8 3# in [7:0] $end
$var wire 8 4# out0 [7:0] $end
$var wire 8 5# out1 [7:0] $end
$var wire 5 6# sel0 [4:0] $end
$var wire 5 7# sel1 [4:0] $end
$var wire 5 8# sel2 [4:0] $end
$upscope $end
$scope module reg1 $end
$var wire 1 ! _reset $end
$var wire 1 ( clk $end
$var wire 8 9# in [7:0] $end
$var wire 8 :# out0 [7:0] $end
$var wire 8 ;# out1 [7:0] $end
$var wire 5 <# sel0 [4:0] $end
$var wire 5 =# sel1 [4:0] $end
$var wire 5 ># sel2 [4:0] $end
$upscope $end
$scope module reg2 $end
$var wire 1 ! _reset $end
$var wire 1 ( clk $end
$var wire 8 ?# in [7:0] $end
$var wire 8 @# out0 [7:0] $end
$var wire 8 A# out1 [7:0] $end
$var wire 5 B# sel0 [4:0] $end
$var wire 5 C# sel1 [4:0] $end
$var wire 5 D# sel2 [4:0] $end
$upscope $end
$scope module reg3 $end
$var wire 1 ! _reset $end
$var wire 1 ( clk $end
$var wire 8 E# in [7:0] $end
$var wire 8 F# out0 [7:0] $end
$var wire 8 G# out1 [7:0] $end
$var wire 5 H# sel0 [4:0] $end
$var wire 5 I# sel1 [4:0] $end
$var wire 5 J# sel2 [4:0] $end
$upscope $end
$scope module a0 $end
$var wire 6 K# func [5:0] $end
$var wire 8 L# in0 [7:0] $end
$var wire 8 M# in1 [7:0] $end
$var reg 8 N# hi [7:0] $end
$var reg 8 O# lo [7:0] $end
$var reg 8 P# out [7:0] $end
$var reg 1 Q# overflow $end
$upscope $end
$scope module a1 $end
$var wire 6 R# func [5:0] $end
$var wire 8 S# in0 [7:0] $end
$var wire 8 T# in1 [7:0] $end
$var reg 8 U# hi [7:0] $end
$var reg 8 V# lo [7:0] $end
$var reg 8 W# out [7:0] $end
$var reg 1 X# overflow $end
$upscope $end
$scope module a2 $end
$var wire 6 Y# func [5:0] $end
$var wire 8 Z# in0 [7:0] $end
$var wire 8 [# in1 [7:0] $end
$var reg 8 \# hi [7:0] $end
$var reg 8 ]# lo [7:0] $end
$var reg 8 ^# out [7:0] $end
$var reg 1 _# overflow $end
$upscope $end
$scope module a3 $end
$var wire 6 `# func [5:0] $end
$var wire 8 a# in0 [7:0] $end
$var wire 8 b# in1 [7:0] $end
$var reg 8 c# hi [7:0] $end
$var reg 8 d# lo [7:0] $end
$var reg 8 e# out [7:0] $end
$var reg 1 f# overflow $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#4000001
$dumpvars
0f#
b0 e#
bx d#
bx c#
b0 b#
b0 a#
b0 `#
0_#
b0 ^#
bx ]#
bx \#
b0 [#
b0 Z#
b0 Y#
0X#
b0 W#
bx V#
bx U#
b0 T#
b0 S#
b0 R#
1Q#
b0 P#
bx O#
bx N#
b0 M#
b0 L#
b0 K#
b0 J#
b0 I#
b0 H#
b0 G#
b0 F#
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 @#
b0 ?#
b0 >#
b0 =#
b0 <#
b0 ;#
b0 :#
b0 9#
b0 8#
b0 7#
b0 6#
b0 5#
b0 4#
b0 3#
b0 2#
b11111111111111111111111111111111 1#
b0 0#
b0 /#
b0 .#
b0 -#
b1 ,#
b1 +#
b0 *#
b101100001011110011111111 )#
b11111111111111111111111111111111 (#
b0 '#
b10000000000000000000000000000 &#
b1001 %#
b11111111111111111111111111111111 $#
b0 ##
b0 "#
b101100001011110011111111 !#
b1011110011111111 ~"
b0 }"
b101100001011110011111111 |"
b11111111 {"
b0 z"
b0 y"
b0 x"
b0 w"
1v"
b0 u"
b0 t"
b0 s"
0r"
b0 q"
b0 p"
b0 o"
0n"
b1 m"
b1001 l"
b0 k"
b0 j"
b0 i"
1h"
b0 g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
b0 L"
0K"
0J"
0I"
0H"
b0 G"
b0 F"
0E"
b0 D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
b100 m
b0 l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
b10000000000000000000000000000 S
b0 R
b0 Q
0P
0O
b1 N
0M
0L
0K
0J
0I
0H
0G
0F
1E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
b0 8
b0 7
b0 6
05
b0 4
b0 3
b0 2
b10000000000000000000000000000 1
b1001 0
b0 /
b1 .
b0 -
b11111111111111111111111111111111 ,
b101100001011110011111111 +
b0 *
1)
0(
1'
b0 &
b0 %
0$
b0 #
b0 "
1!
$end
#4000002
1(
#4000004
0(
#4000006
1(
#4000008
0(
#4000010
1(
#4000012
0(
#4000014
1(
#4000016
0(
#4000018
1(
#4000020
0(
#4000022
1(
#4000024
0(
#4000026
1(
#4000028
0(
#4000030
1(
#4000032
0(
#4000034
1(
#4000036
0(
#4000038
1(
#4000040
0(
#4000042
1(
#4000044
0(
#4000046
1(
#4000048
0(
#4000050
1(
#4000052
0(
#4000054
1(
#4000056
0(
#4000058
1(
#4000060
0(
#4000062
1(
#4000064
0(
#4000066
1(
#4000068
0(
#4000070
1(
#4000072
0(
#4000074
1(
#4000076
0(
#4000078
1(
#4000080
0(
#4000082
1(
#4000084
0(
#4000086
1(
#4000088
0(
#4000090
1(
#4000092
0(
#4000094
1(
#4000096
0(
#4000098
1(
#4000100
0(
#4000102
1(
#4000104
0(
#4000106
1(
#4000108
0(
#4000110
1(
#4000112
0(
#4000114
1(
#4000116
0(
#4000118
1(
#4000120
0(
#4000122
1(
#4000124
0(
#4000126
1(
#4000128
0(
#4000130
1(
#4000132
0(
#4000134
1(
#4000136
0(
#4000138
1(
#4000140
0(
#4000142
1(
#4000144
0(
#4000146
1(
#4000148
0(
#4000150
1(
#4000152
0(
#4000154
1(
#4000156
0(
#4000158
1(
#4000160
0(
#4000162
1(
#4000164
0(
#4000166
1(
#4000168
0(
#4000170
1(
#4000172
0(
#4000174
1(
#4000176
0(
#4000178
1(
#4000180
0(
#4000182
1(
#4000184
0(
#4000186
1(
#4000188
0(
#4000190
1(
#4000192
0(
#4000194
1(
#4000196
0(
#4000198
1(
#4000200
0(
#4000202
1(
#4000204
0(
#4000206
1(
#4000208
0(
#4000210
1(
#4000212
0(
#4000214
1(
#4000216
0(
#4000218
1(
#4000220
0(
#4000222
1(
#4000224
0(
#4000226
1(
#4000228
0(
#4000230
1(
#4000232
0(
#4000234
1(
#4000236
0(
#4000238
1(
#4000240
0(
#4000242
1(
#4000244
0(
#4000246
1(
#4000248
0(
#4000250
1(
#4000252
0(
#4000254
1(
#4000256
0(
#4000258
1(
#4000260
0(
#4000262
1(
#4000264
0(
#4000266
1(
#4000268
0(
#4000270
1(
#4000272
0(
#4000274
1(
#4000276
0(
#4000278
1(
#4000280
0(
#4000282
1(
#4000284
0(
#4000286
1(
#4000288
0(
#4000290
1(
#4000292
0(
#4000294
1(
#4000296
0(
#4000298
1(
#4000300
0(
#4000302
1(
#4000304
0(
#4000306
1(
#4000308
0(
#4000310
1(
#4000312
0(
#4000314
1(
#4000316
0(
#4000318
1(
#4000320
0(
#4000322
1(
#4000324
0(
#4000326
1(
#4000328
0(
#4000330
1(
#4000332
0(
#4000334
1(
#4000336
0(
#4000338
1(
#4000340
0(
#4000342
1(
#4000344
0(
#4000346
1(
#4000348
0(
#4000350
1(
#4000352
0(
#4000354
1(
#4000356
0(
#4000358
1(
#4000360
0(
#4000362
1(
#4000364
0(
#4000366
1(
#4000368
0(
#4000370
1(
#4000372
0(
#4000374
1(
#4000376
0(
#4000378
1(
#4000380
0(
#4000382
1(
#4000384
0(
#4000386
1(
#4000388
0(
#4000390
1(
#4000392
0(
#4000394
1(
#4000396
0(
#4000398
1(
#4000400
0(
#4000402
1(
#4000404
0(
#4000406
1(
#4000408
0(
#4000410
1(
#4000412
0(
#4000414
1(
#4000416
0(
#4000418
1(
#4000420
0(
#4000422
1(
#4000424
0(
#4000426
1(
#4000428
0(
#4000430
1(
#4000432
0(
#4000434
1(
#4000436
0(
#4000438
1(
#4000440
0(
#4000442
1(
#4000444
0(
#4000446
1(
#4000448
0(
#4000450
1(
#4000452
0(
#4000454
1(
#4000456
0(
#4000458
1(
#4000460
0(
#4000462
1(
#4000464
0(
#4000466
1(
#4000468
0(
#4000470
1(
#4000472
0(
#4000474
1(
#4000476
0(
#4000478
1(
#4000480
0(
#4000482
1(
#4000484
0(
#4000486
1(
#4000488
0(
#4000490
1(
#4000492
0(
#4000494
1(
#4000496
0(
#4000498
1(
#4000500
0(
#4000502
1(
#4000504
0(
#4000506
1(
#4000508
0(
#4000510
1(
#4000512
0(
#4000514
1(
#4000516
0(
#4000518
1(
#4000520
0(
#4000522
1(
#4000524
0(
#4000526
1(
#4000528
0(
#4000530
1(
#4000532
0(
#4000534
1(
#4000536
0(
#4000538
1(
#4000540
0(
#4000542
1(
#4000544
0(
#4000546
1(
#4000548
0(
#4000550
1(
#4000552
0(
#4000554
1(
#4000556
0(
#4000558
1(
#4000560
0(
#4000562
1(
#4000564
0(
#4000566
1(
#4000568
0(
#4000570
1(
#4000572
0(
#4000574
1(
#4000576
0(
#4000578
1(
#4000580
0(
#4000582
1(
#4000584
0(
#4000586
1(
#4000588
0(
#4000590
1(
#4000592
0(
#4000594
1(
#4000596
0(
#4000598
1(
#4000600
0(
#4000602
1(
#4000604
0(
#4000606
1(
#4000608
0(
#4000610
1(
#4000612
0(
#4000614
1(
#4000616
0(
#4000618
1(
#4000620
0(
#4000622
1(
#4000624
0(
#4000626
1(
#4000628
0(
#4000630
1(
#4000632
0(
#4000634
1(
#4000636
0(
#4000638
1(
#4000640
0(
#4000642
1(
#4000644
0(
#4000646
1(
#4000648
0(
#4000650
1(
#4000652
0(
#4000654
1(
#4000656
0(
#4000658
1(
#4000660
0(
#4000662
1(
#4000664
0(
#4000666
1(
#4000668
0(
#4000670
1(
#4000672
0(
#4000674
1(
#4000676
0(
#4000678
1(
#4000680
0(
#4000682
1(
#4000684
0(
#4000686
1(
#4000688
0(
#4000690
1(
#4000692
0(
#4000694
1(
#4000696
0(
#4000698
1(
#4000700
0(
#4000702
1(
#4000704
0(
#4000706
1(
#4000708
0(
#4000710
1(
#4000712
0(
#4000714
1(
#4000716
0(
#4000718
1(
#4000720
0(
#4000722
1(
#4000724
0(
#4000726
1(
#4000728
0(
#4000730
1(
#4000732
0(
#4000734
1(
#4000736
0(
#4000738
1(
#4000740
0(
#4000742
1(
#4000744
0(
#4000746
1(
#4000748
0(
#4000750
1(
#4000752
0(
#4000754
1(
#4000756
0(
#4000758
1(
#4000760
0(
#4000762
1(
#4000764
0(
#4000766
1(
#4000768
0(
#4000770
1(
#4000772
0(
#4000774
1(
#4000776
0(
#4000778
1(
#4000780
0(
#4000782
1(
#4000784
0(
#4000786
1(
#4000788
0(
#4000790
1(
#4000792
0(
#4000794
1(
#4000796
0(
#4000798
1(
#4000800
0(
#4000802
1(
#4000804
0(
#4000806
1(
#4000808
0(
#4000810
1(
#4000812
0(
#4000814
1(
#4000816
0(
#4000818
1(
#4000820
0(
#4000822
1(
#4000824
0(
#4000826
1(
#4000828
0(
#4000830
1(
#4000832
0(
#4000834
1(
#4000836
0(
#4000838
1(
#4000840
0(
#4000842
1(
#4000844
0(
#4000846
1(
#4000848
0(
#4000850
1(
#4000852
0(
#4000854
1(
#4000856
0(
#4000858
1(
#4000860
0(
#4000862
1(
#4000864
0(
#4000866
1(
#4000868
0(
#4000870
1(
#4000872
0(
#4000874
1(
#4000876
0(
#4000878
1(
#4000880
0(
#4000882
1(
#4000884
0(
#4000886
1(
#4000888
0(
#4000890
1(
#4000892
0(
#4000894
1(
#4000896
0(
#4000898
1(
#4000900
0(
#4000902
1(
#4000904
0(
#4000906
1(
#4000908
0(
#4000910
1(
#4000912
0(
#4000914
1(
#4000916
0(
#4000918
1(
#4000920
0(
#4000922
1(
#4000924
0(
#4000926
1(
#4000928
0(
#4000930
1(
#4000932
0(
#4000934
1(
#4000936
0(
#4000938
1(
#4000940
0(
#4000942
1(
#4000944
0(
#4000946
1(
#4000948
0(
#4000950
1(
#4000952
0(
#4000954
1(
#4000956
0(
#4000958
1(
#4000960
0(
#4000962
1(
#4000964
0(
#4000966
1(
#4000968
0(
#4000970
1(
#4000972
0(
#4000974
1(
#4000976
0(
#4000978
1(
#4000980
0(
#4000982
1(
#4000984
0(
#4000986
1(
#4000988
0(
#4000990
1(
#4000992
0(
#4000994
1(
#4000996
0(
#4000998
1(
#4001000
0(
#4001001
